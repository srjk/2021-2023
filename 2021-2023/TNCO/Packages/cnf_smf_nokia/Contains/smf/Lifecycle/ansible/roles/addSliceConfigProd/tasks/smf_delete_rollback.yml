# Send Command to South Bound endpoint - Nokia SMF
- name: Create the list
  set_fact:   
    list_smf_dnnName: "{{ smf_dnnName.split(',') | map('trim') | list }}"
    list_smfSlice_sliceListName: "{{ smfSlice_sliceListName.split(',') | map('trim')| list }}"

- shell: "python3 test.py"
  register: start_time
  no_log: True

- name: setting filename
  set_fact:
    filename: /tmp/ansible_log/ansible_{{ ansible_date_time.iso8601 }}_smf_delete_rollback.log

# - name: generate SB json and copy it to utility server
#   copy:
#     dest: "smf_delete_rollback.sh"
#     content: |
#       #!/usr/bin/expect
#       spawn ssh -o HostKeyAlgorithms=+ssh-dss -o StrictHostKeyChecking=no {{ SMF_USER }}@{{ SMF_IP }} -p {{ SMF_PORT }}
#       expect "password: "
#       send "{{ deployment_location.properties.SMF_PASS }}\r"
#       expect eof
- name: generate SB json and copy it to utility server
  copy:
    dest: "smf_delete_rollback.sh"
    content: |
      #!/usr/bin/expect
      spawn sshpass -e ssh -o HostKeyAlgorithms=+ssh-dss -o StrictHostKeyChecking=no {{ SMF_USER }}@{{ SMF_IP }} -p {{ SMF_PORT }}
      expect eof

- name: Insert a line at the end of a file.
  lineinfile:
    path: "smf_delete_rollback.sh"
    line: |
            expect -re "{{ SMF_terminal }}" { send "configure mobile-gateway profile list slice-list SliceList_internet_ota slice {{ smfSlice_sliceName }} suspend \r" }
  when: "'internet' in list_smf_dnnName"

- name: Insert a line at the end of a file.
  lineinfile:
    path: "smf_delete_rollback.sh"
    line: |
            expect -re "{{ SMF_terminal }}" { send "configure mobile-gateway profile list slice-list SliceList_ims_sos_xcap slice {{ smfSlice_sliceName }} suspend \r" }
  when: "'ims' in list_smf_dnnName"

- name: Insert a line at the end of a file.
  lineinfile:
    path: "smf_delete_rollback.sh"
    line: |
            expect -re "{{ SMF_terminal }}" { send "configure mobile-gateway profile list slice-list SliceList_hotspot slice {{ smfSlice_sliceName }} suspend \r" }
  when: "'hotspot' in list_smf_dnnName" 

- name: Insert a line at the end of a file.
  lineinfile:
    path: "smf_delete_rollback.sh"
    line: |
            expect -re "{{ SMF_terminal }}" { send "configure mobile-gateway profile list slice-list {{ item }} no slice {{ smfSlice_sliceName }} \r" }
  loop: "{{ list_smfSlice_sliceListName }}"

- name: Insert a line at the end of a file.
  lineinfile:
    path: "smf_delete_rollback.sh"
    line: |
       expect -re "{{ SMF_terminal }}" { send "exit all\r" }
       send "logout\r"
       expect eof

- name: running script
  command: chmod 775 smf_delete_rollback.sh

- name: generate SB json and copy it to utility server
  copy:
    dest: "/tmp/smf_delete_rollback_{{ instance_name }}.sh"
    src: "smf_delete_rollback.sh"

- name: running script
  shell: ./smf_delete_rollback.sh
  register: result_rollback
  environment: 
    SSHPASS: "{{ deployment_location.properties.SMF_PASS }}"

- shell: "python3 test.py"
  register: end_time
  no_log: True

# - debug: msg="{{ result.date  }}"

- shell: "python3 diff.py '{{ end_time.stdout }}' '{{ start_time.stdout }}'"
  register: time_diff

- name: generate SB json and copy
  copy:
    dest: "{{ filename }}"
    content: |
       ***********************************
       start_time:  {{ start_time.stdout }}
       end_time:  {{ end_time.stdout }}
       time_taken:  {{ time_diff.stdout }}
       ***********************************
       order_send:  {{lookup('file', 'smf_delete_rollback.sh')}}
       ____________________________________________________
       result_return: {{ result_rollback }}

# - set_fact:
    # target: "{{ result.stdout | regex_search('Error') }}"
# - fail:
    # msg: "{{ result.stdout | regex_search('Error.*') }}"
  # when: "target =='Error'"