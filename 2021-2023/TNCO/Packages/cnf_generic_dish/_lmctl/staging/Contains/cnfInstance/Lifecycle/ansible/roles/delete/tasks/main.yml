- uri:
    url: "{{ deployment_location.properties.lcmservice_url }}/fetch/delete/order?assemblyName={{ instance_name }}"
  register: result
- debug:
    msg: " order id result {{ result.json.output }}"
- fail:
    msg: "order_id not found"
  when: "result.json.output is none"

- name: copy
  copy:
    dest: "/tmp/test"
    content: |
      {{ cnfInstance }}
- set_fact:
    targetClusterRole: "{{ cnfInstance['config_context']['targetClusterRole'] }}"
    codeCommitRole: "{{ cnfInstance['config_context']['codeCommitRole'] }}"
    eksClusterKubeConfig: "{{ cnfInstance['config_context']['eksClusterKubeConfig'] }}"
    eksClusterName: "{{ cnfInstance['config_context']['eksClusterName'] }}"
    cdkDeployRegion: "{{ cnfInstance['config_context']['cdkDeployRegion'] }}"
    profile_name: "{{ cnfInstance['config_context']['application_json']['profiles'].keys() }}"
- name: trigger python
  shell: "python3 delete.py {{ codeCommitRole }} {{ deployment_location.properties.lcm_session }} {{ deployment_location.properties.lcm_region_name }} {{ deployment_location.properties.kafka_pod }} {{ deployment_location.properties.kafka_topic }} {{ result.json.output.order_id }}"
  register: result_python
  failed_when: "result_python.rc not in [ 0, 1 ]"
# - set_fact:
#     test_result: "{{ result.stdout }}"

# - set_fact:
#     output__commitId: "{{ test_result['commitId'] }}"
#     output__pipeline_id: "{{ test_result['pipeline_id'] }}"
#     output__response_status: "{{ test_result['response_status'] }}"

- fail:
    msg: "pipeline {{ result_python.stderr }}"
  when: "result_python.stdout != 'Succeeded'"

- shell: |
      ASSUME_ROLE_ARN={{ targetClusterRole }}
      CREDS=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name $(date '+%Y%m%d%H%M%S%3N') --duration-seconds 3600 --query '[Credentials.AccessKeyId,Credentials.SecretAccessKey,Credentials.SessionToken]' --output text)
      export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | cut -d' ' -f2)
      export AWS_ACCESS_KEY_ID=$(echo $CREDS | cut -d' ' -f1)
      export AWS_SESSION_TOKEN=$(echo $CREDS | cut -d' ' -f3)
      {{ eksClusterKubeConfig }}
      kubectl get ns
  register: result_shell
- debug:
      msg: "{{ result_shell }}"

- shell: python3 lm.py "{{ result_shell.stdout_lines | join(',') }}" "{{ deployment_location.properties.kafka_pod }}" "{{ deployment_location.properties.kafka_topic }}" "{{ result.json.output.order_id }}"