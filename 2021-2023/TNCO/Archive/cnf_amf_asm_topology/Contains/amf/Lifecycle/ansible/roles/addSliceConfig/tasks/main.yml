# convert ALM properties to json provide request for South Bound endpoint - Nokia Provisioning GW 
- name: Create the list
  set_fact:   
    list_amfTac: "{{ amfSlice_tai.split(',') | list }}" 
    list_amfSlice_dnnName: "{{ amfSlice_dnnName.split(',') | list }}"
    list_amfSlice_snssaiToDnnListName: "{{ amfSlice_snssaiToDnnListName.split(',') | list }}"
        
- name: Insert a line at the end of a file.
  raw: export USER=root

- name: Insert a line at the end of a file.
  raw: cmm amfTai create --plmnName {{ amfSlice_plmnName }} --amfTac {{ item }}  --timeZoneName {{ amfSlice_timeZone}}
  loop: "{{ list_amfTac }}"
  register: result
  failed_when:
    - '"The relevant data content already exists" not in result.stdout'
    - '"Field" not in result.stdout'


- name: Insert a line at the end of a file.
  raw: cmm snssaiList create --name {{ amfSlice_snssaiListName }} 
  register: result
  failed_when:
    - '"The relevant data content already exists" not in result.stdout'
    - '"Field" not in result.stdout'

- name: Insert a line at the end of a file.
  raw: cmm snssai create --name {{ amfSlice_sliceName }} --sliceServiceType {{ amfSlice_sst }} --sliceDifferentiator {{ amfSlice_sd }} --supportedInAllTa {{ amfSlice_supportedInAllTacFlag }} 
  register: result
  failed_when:
    - '"The relevant data content already exists" not in result.stdout'
    - '"Field" not in result.stdout'

- name: Insert a line at the end of a file.
  raw: cmm snssaiListItem create --snssaiListName {{ amfSlice_snssaiListName}} --snssaiName {{ amfSlice_sliceName }} 
  register: result
  failed_when:
    - '"The relevant data content already exists" not in result.stdout'
    - '"Field" not in result.stdout'

- name: Insert a line at the end of a file.
  raw: cmm amfSetSnssai create --plmnName {{ amfSlice_plmnName }} --amfRegionId {{ amfSlice_amfRegionId}} --amfSetId {{ amfSlice_amfSetId }} --snssaiListName {{ amfSlice_snssaiListName }}
  register: result
  failed_when:
    - '"The relevant data content already exists" not in result.stdout'
    - '"Field" not in result.stdout'
    - '"Only 1 plmnName, amfRegionId, and amfSetId record can be provisioned" not in result.stdout'

- name: Insert a line at the end of a file.
  raw: cmm snssaiToDnnList create --name {{ item }}
  loop: "{{ list_amfSlice_snssaiToDnnListName }}"
  register: result
  failed_when:
    - '"The relevant data content already exists" not in result.stdout'
    - '"Field" not in result.stdout'
# - name: Insert a line at the end of a file.
#   lineinfile:
#     path: "/tmp/remote_server_{{ instance_name }}.sh"
#     line: |
#       cmm snssaiList create --name {{ amfSlice_snssaiListName }}
#       cmm snssai create --name {{ amfSlice_sliceName }} --sliceServiceType {{ amfSlice_sst }} --sliceDifferentiator {{ amfSlice_sd }} --supportedInAllTa {{ amfSlice_supportedInAllTacFlag }}
#       cmm snssaiListItem create --snssaiListName {{ amfSlice_snssaiListName}} --snssaiName {{ amfSlice_sliceName }} 
#       cmm amfSetSnssai create --plmnName {{ amfSlice_plmnName }} --amfRegionId {{ amfSlice_amfRegionId}} --amfSetId {{ amfSlice_amfSetId }} --snssaiListName {{ amfSlice_snssaiListName }}
#       cmm snssaiToDnnList create --name {{ amfSlice_snssaiToDnnListName }}



- name: Insert a line at the end of a file.
  raw: cmm snssaiToDnn create --dataNetworkName {{ item.0 }} --snssaiToDnnListName {{ item.1 }} --snssaiName {{ amfSlice_sliceName }}
  loop: "{{ data[0]|zip(*data[1:])|list }}"
  vars:
    data:
        -  "{{ list_amfSlice_dnnName }}"
        -  "{{ list_amfSlice_snssaiToDnnListName }}"
  register: result
  failed_when:
    - '"The relevant data content already exists" not in result.stdout'
    - '"Field" not in result.stdout'


# - name: Insert a line at the end of a file.
#   raw: cmm amfUePlmnServices modify {{ amfSlice_plmnName }} --defaultSnssaiSelection {{ amfSlice_defaultSnssaiSelection }} --defaultSnssaiListName {{ amfSlice_snssaiListName }} --snssaiToDnnListName {{ amfSlice_snssaiToDnnListName }}

# - name: create test.sh
#   copy:
#     dest: "test.sh"
#     content: |
#       cmm amfTai create --plmnName 313_340 --amfTac 3115 --timeZoneName Default
  
# #- name: running first command
# #  shell: kubectl exec -it nk-amf001c-usw2aza001rd-alms-0 -- /bin/bash --token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImFNOTJKN01BaWNmQWZNcFV2SG9JU1loZDFvWS1fdGFTUWV6cG81cTFDWDQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXZhbWYwMSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhbnNpYmxlLWs4cy1hY2NvdW50LXRva2VuLTVia2xuIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFuc2libGUtazhzLWFjY291bnQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI5ZGE3MmM3OC1jMTZmLTQwZmMtYWU3Zi1hYjk4ZjU4ODk4YTAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGV2YW1mMDE6YW5zaWJsZS1rOHMtYWNjb3VudCJ9.mMoEGhOEYate55by2Yc6NjbjmnlLyTf25xbrPQUbCrpiCYfUxgezrT2Xb4gBhAw7O_cZkM3SNzYwLWzXrE_sWJTFwOjQWjZSGt5xokflgvsFIn4UUCbIQsogf_t22Oz9Gr5AWV3v0cB6VPWn-BVY_4s9NSeYJmwtU28zyJS98cmvm7crRs7RLeJUIqhPU7xVHWy6qIbTsFgJcUHURfj0EDlJLaS_DR_a2m0cgLSF612TfbMeDCEFB4PvaCDnO9drYCWF-smeDuz1vjIEZ3LKgeL1_QdgRto4MbT8LAuxOSoAuHso85NHWDl-1pttnybSe996w7lX7AEMelZUwhdnNg -n devamf01 --server=https://034091F16185F5305FB7AD71388F623E.gr7.us-west-2.eks.amazonaws.com:443 --insecure-skip-tls-verify=true -c "cmm amfTai create --plmnName 313_340 --amfTac 3115 --timeZoneName Default"

# - name: running copy file 
#   shell: kubectl cp test.sh  nk-amf001c-usw2aza001rd-necc-0:/tmp --token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImFNOTJKN01BaWNmQWZNcFV2SG9JU1loZDFvWS1fdGFTUWV6cG81cTFDWDQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXZhbWYwMSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhbnNpYmxlLWs4cy1hY2NvdW50LXRva2VuLTVia2xuIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFuc2libGUtazhzLWFjY291bnQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI5ZGE3MmM3OC1jMTZmLTQwZmMtYWU3Zi1hYjk4ZjU4ODk4YTAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGV2YW1mMDE6YW5zaWJsZS1rOHMtYWNjb3VudCJ9.mMoEGhOEYate55by2Yc6NjbjmnlLyTf25xbrPQUbCrpiCYfUxgezrT2Xb4gBhAw7O_cZkM3SNzYwLWzXrE_sWJTFwOjQWjZSGt5xokflgvsFIn4UUCbIQsogf_t22Oz9Gr5AWV3v0cB6VPWn-BVY_4s9NSeYJmwtU28zyJS98cmvm7crRs7RLeJUIqhPU7xVHWy6qIbTsFgJcUHURfj0EDlJLaS_DR_a2m0cgLSF612TfbMeDCEFB4PvaCDnO9drYCWF-smeDuz1vjIEZ3LKgeL1_QdgRto4MbT8LAuxOSoAuHso85NHWDl-1pttnybSe996w7lX7AEMelZUwhdnNg -n devamf01 --server=https://034091F16185F5305FB7AD71388F623E.gr7.us-west-2.eks.amazonaws.com:443 --insecure-skip-tls-verify=true

# - name: running script
#   shell: kubectl exec -it nk-amf001c-usw2aza001rd-necc-0 /bin/bash --token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImFNOTJKN01BaWNmQWZNcFV2SG9JU1loZDFvWS1fdGFTUWV6cG81cTFDWDQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXZhbWYwMSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhbnNpYmxlLWs4cy1hY2NvdW50LXRva2VuLTVia2xuIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFuc2libGUtazhzLWFjY291bnQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI5ZGE3MmM3OC1jMTZmLTQwZmMtYWU3Zi1hYjk4ZjU4ODk4YTAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGV2YW1mMDE6YW5zaWJsZS1rOHMtYWNjb3VudCJ9.mMoEGhOEYate55by2Yc6NjbjmnlLyTf25xbrPQUbCrpiCYfUxgezrT2Xb4gBhAw7O_cZkM3SNzYwLWzXrE_sWJTFwOjQWjZSGt5xokflgvsFIn4UUCbIQsogf_t22Oz9Gr5AWV3v0cB6VPWn-BVY_4s9NSeYJmwtU28zyJS98cmvm7crRs7RLeJUIqhPU7xVHWy6qIbTsFgJcUHURfj0EDlJLaS_DR_a2m0cgLSF612TfbMeDCEFB4PvaCDnO9drYCWF-smeDuz1vjIEZ3LKgeL1_QdgRto4MbT8LAuxOSoAuHso85NHWDl-1pttnybSe996w7lX7AEMelZUwhdnNg -n devamf01 --server=https://034091F16185F5305FB7AD71388F623E.gr7.us-west-2.eks.amazonaws.com:443 --insecure-skip-tls-verify=true -- sh /tmp/test.sh 


# - name: remove file
#   shell: kubectl exec -it nk-amf001c-usw2aza001rd-necc-0 /bin/bash --token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImFNOTJKN01BaWNmQWZNcFV2SG9JU1loZDFvWS1fdGFTUWV6cG81cTFDWDQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZXZhbWYwMSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhbnNpYmxlLWs4cy1hY2NvdW50LXRva2VuLTVia2xuIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFuc2libGUtazhzLWFjY291bnQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiI5ZGE3MmM3OC1jMTZmLTQwZmMtYWU3Zi1hYjk4ZjU4ODk4YTAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6ZGV2YW1mMDE6YW5zaWJsZS1rOHMtYWNjb3VudCJ9.mMoEGhOEYate55by2Yc6NjbjmnlLyTf25xbrPQUbCrpiCYfUxgezrT2Xb4gBhAw7O_cZkM3SNzYwLWzXrE_sWJTFwOjQWjZSGt5xokflgvsFIn4UUCbIQsogf_t22Oz9Gr5AWV3v0cB6VPWn-BVY_4s9NSeYJmwtU28zyJS98cmvm7crRs7RLeJUIqhPU7xVHWy6qIbTsFgJcUHURfj0EDlJLaS_DR_a2m0cgLSF612TfbMeDCEFB4PvaCDnO9drYCWF-smeDuz1vjIEZ3LKgeL1_QdgRto4MbT8LAuxOSoAuHso85NHWDl-1pttnybSe996w7lX7AEMelZUwhdnNg -n devamf01 --server=https://034091F16185F5305FB7AD71388F623E.gr7.us-west-2.eks.amazonaws.com:443 --insecure-skip-tls-verify=true -- rm  /tmp/test.sh  
