- name: Configure NSI auth                                                                                                                                                                                  
  shell: "curl --location --request GET '{{ NSSF_HOST }}/nnssf-configuration/v1/configuredsnssais/{{ amfid }}:{{ mcc }}:{{ mnc }}:{{ myvar }}' --http2-prior-knowledge"
  register: result_csn

- debug: var=result_csn
    
- block:
    - name: Configure NSI auth
      shell: "curl --location --request POST '{{ NSSF_HOST }}/nnssf-configuration/v1/configuredsnssais' --http2-prior-knowledge --header 'Accept: application/json' --header 'Content-Type: application/json' -d@/tmp/{{ myvar }}_configuredsnssais_request.json.j2 "
      register: result_profile
    - name : failed                     
      fail:                                    
        msg: "{{ result_profile.stdout }}"     
      when: "'status' in result_profile.stdout"
  when: "'status' in result_csn.stdout"

- block:
    - name: covert to json
      set_fact:
        csn_pre: "{{ result_csn.stdout | from_json }}"
        data: [{'sst': "{{ sst }}" , 'sd':  "{{ sd  }}"  }]
    - name: adding value
      set_fact:
        csn_post: "{{  csn_pre[0].nssai + data  }}"
    
    - debug: var=csn_post
    
    - name:  create nssaiauth_request
      copy: 
        dest: "/tmp/{{ myvar }}_configuredsnssais_request.json.j2"
        content: |
          {    "amfId": "12345678-abcd-efAB-CDEF-123456789012",
               "plmn":{
               "mcc":"{{ mcc }}",
                "mnc":"{{ mnc }}"
              },
              "tac":"{{ myvar }}",
              "salience": "0",
              "nssai": {{ csn_post }}
             }

    - name: Configure NSI auth
      shell: "curl --location --request PUT '{{ NSSF_HOST }}/nnssf-configuration/v1/configuredsnssais/{{ amfid }}:{{ mcc }}:{{ mnc }}:{{ myvar }}' --http2-prior-knowledge --header 'Accept: application/json' --header 'Content-Type: application/json' -d@/tmp/{{ myvar }}_configuredsnssais_request.json.j2 " 
      register: result_test

    - name : failed
      fail:
        msg: "{{ result_test.stdout }}"
      when: "'status' in result_test.stdout"

  when: "'status' not in result_csn.stdout"



#- name : failed
#  fail: 
#    msg: result_profile.stdout
#  when: 'status' in result_profile.stdout
